version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      DEBUG: 0
    command: >
      sh -c "python manage.py migrate &&
             gunicorn ZooProject.core.wsgi:application -w 3 -b 0.0.0.0:8000"
    volumes:
      - staticfiles:/app/staticfiles
      - media:/app/media
    expose:
      - "8000"

  nginx:
    image: nginx:alpine
    depends_on:
      - web
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - staticfiles:/staticfiles:ro
      - media:/media:ro
    ports:
      - "80:80"

volumes:
  pgdata:
  staticfiles:
  media:
